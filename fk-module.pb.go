// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fk-module.proto

/*
Package fk_module is a generated protocol buffer package.

It is generated from these files:
	fk-module.proto

It has these top-level messages:
	QueryCapabilities
	QuerySensorCapabilities
	Capabilities
	SensorCapabilities
	BeginTakeReadings
	QueryReadingStatus
	ReadingStatus
	SensorReadings
	SensorReading
	WireMessageQuery
	Error
	WireMessageReply
*/
package fk_module

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryType int32

const (
	QueryType_QUERY_NONE                QueryType = 0
	QueryType_QUERY_CAPABILITIES        QueryType = 1
	QueryType_QUERY_SENSOR_CAPABILITIES QueryType = 2
	QueryType_QUERY_BEGIN_TAKE_READINGS QueryType = 3
	QueryType_QUERY_READING_STATUS      QueryType = 4
)

var QueryType_name = map[int32]string{
	0: "QUERY_NONE",
	1: "QUERY_CAPABILITIES",
	2: "QUERY_SENSOR_CAPABILITIES",
	3: "QUERY_BEGIN_TAKE_READINGS",
	4: "QUERY_READING_STATUS",
}
var QueryType_value = map[string]int32{
	"QUERY_NONE":                0,
	"QUERY_CAPABILITIES":        1,
	"QUERY_SENSOR_CAPABILITIES": 2,
	"QUERY_BEGIN_TAKE_READINGS": 3,
	"QUERY_READING_STATUS":      4,
}

func (x QueryType) String() string {
	return proto.EnumName(QueryType_name, int32(x))
}
func (QueryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReplyType int32

const (
	ReplyType_REPLY_NONE           ReplyType = 0
	ReplyType_REPLY_RETRY          ReplyType = 1
	ReplyType_REPLY_ERROR          ReplyType = 2
	ReplyType_REPLY_CAPABILITIES   ReplyType = 3
	ReplyType_REPLY_READING_STATUS ReplyType = 4
)

var ReplyType_name = map[int32]string{
	0: "REPLY_NONE",
	1: "REPLY_RETRY",
	2: "REPLY_ERROR",
	3: "REPLY_CAPABILITIES",
	4: "REPLY_READING_STATUS",
}
var ReplyType_value = map[string]int32{
	"REPLY_NONE":           0,
	"REPLY_RETRY":          1,
	"REPLY_ERROR":          2,
	"REPLY_CAPABILITIES":   3,
	"REPLY_READING_STATUS": 4,
}

func (x ReplyType) String() string {
	return proto.EnumName(ReplyType_name, int32(x))
}
func (ReplyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ModuleType int32

const (
	ModuleType_SENSOR         ModuleType = 0
	ModuleType_COMMUNICATIONS ModuleType = 1
)

var ModuleType_name = map[int32]string{
	0: "SENSOR",
	1: "COMMUNICATIONS",
}
var ModuleType_value = map[string]int32{
	"SENSOR":         0,
	"COMMUNICATIONS": 1,
}

func (x ModuleType) String() string {
	return proto.EnumName(ModuleType_name, int32(x))
}
func (ModuleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadingState int32

const (
	ReadingState_IDLE  ReadingState = 0
	ReadingState_BEGIN ReadingState = 1
	ReadingState_BUSY  ReadingState = 2
	ReadingState_DONE  ReadingState = 3
)

var ReadingState_name = map[int32]string{
	0: "IDLE",
	1: "BEGIN",
	2: "BUSY",
	3: "DONE",
}
var ReadingState_value = map[string]int32{
	"IDLE":  0,
	"BEGIN": 1,
	"BUSY":  2,
	"DONE":  3,
}

func (x ReadingState) String() string {
	return proto.EnumName(ReadingState_name, int32(x))
}
func (ReadingState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ErrorType int32

const (
	ErrorType_NONE       ErrorType = 0
	ErrorType_GENERAL    ErrorType = 1
	ErrorType_UNEXPECTED ErrorType = 2
)

var ErrorType_name = map[int32]string{
	0: "NONE",
	1: "GENERAL",
	2: "UNEXPECTED",
}
var ErrorType_value = map[string]int32{
	"NONE":       0,
	"GENERAL":    1,
	"UNEXPECTED": 2,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}
func (ErrorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type QueryCapabilities struct {
	Version    int64  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CallerTime uint32 `protobuf:"varint,2,opt,name=callerTime" json:"callerTime,omitempty"`
}

func (m *QueryCapabilities) Reset()                    { *m = QueryCapabilities{} }
func (m *QueryCapabilities) String() string            { return proto.CompactTextString(m) }
func (*QueryCapabilities) ProtoMessage()               {}
func (*QueryCapabilities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *QueryCapabilities) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *QueryCapabilities) GetCallerTime() uint32 {
	if m != nil {
		return m.CallerTime
	}
	return 0
}

type QuerySensorCapabilities struct {
	Sensor int32 `protobuf:"varint,2,opt,name=sensor" json:"sensor,omitempty"`
}

func (m *QuerySensorCapabilities) Reset()                    { *m = QuerySensorCapabilities{} }
func (m *QuerySensorCapabilities) String() string            { return proto.CompactTextString(m) }
func (*QuerySensorCapabilities) ProtoMessage()               {}
func (*QuerySensorCapabilities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *QuerySensorCapabilities) GetSensor() int32 {
	if m != nil {
		return m.Sensor
	}
	return 0
}

type Capabilities struct {
	Version         int32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Type            ModuleType `protobuf:"varint,2,opt,name=type,enum=fk_module.ModuleType" json:"type,omitempty"`
	Name            string     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	NumberOfSensors int32      `protobuf:"varint,4,opt,name=numberOfSensors" json:"numberOfSensors,omitempty"`
}

func (m *Capabilities) Reset()                    { *m = Capabilities{} }
func (m *Capabilities) String() string            { return proto.CompactTextString(m) }
func (*Capabilities) ProtoMessage()               {}
func (*Capabilities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Capabilities) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Capabilities) GetType() ModuleType {
	if m != nil {
		return m.Type
	}
	return ModuleType_SENSOR
}

func (m *Capabilities) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Capabilities) GetNumberOfSensors() int32 {
	if m != nil {
		return m.NumberOfSensors
	}
	return 0
}

type SensorCapabilities struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *SensorCapabilities) Reset()                    { *m = SensorCapabilities{} }
func (m *SensorCapabilities) String() string            { return proto.CompactTextString(m) }
func (*SensorCapabilities) ProtoMessage()               {}
func (*SensorCapabilities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SensorCapabilities) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SensorCapabilities) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BeginTakeReadings struct {
	Index int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
}

func (m *BeginTakeReadings) Reset()                    { *m = BeginTakeReadings{} }
func (m *BeginTakeReadings) String() string            { return proto.CompactTextString(m) }
func (*BeginTakeReadings) ProtoMessage()               {}
func (*BeginTakeReadings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BeginTakeReadings) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type QueryReadingStatus struct {
}

func (m *QueryReadingStatus) Reset()                    { *m = QueryReadingStatus{} }
func (m *QueryReadingStatus) String() string            { return proto.CompactTextString(m) }
func (*QueryReadingStatus) ProtoMessage()               {}
func (*QueryReadingStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ReadingStatus struct {
	State ReadingState `protobuf:"varint,1,opt,name=state,enum=fk_module.ReadingState" json:"state,omitempty"`
}

func (m *ReadingStatus) Reset()                    { *m = ReadingStatus{} }
func (m *ReadingStatus) String() string            { return proto.CompactTextString(m) }
func (*ReadingStatus) ProtoMessage()               {}
func (*ReadingStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadingStatus) GetState() ReadingState {
	if m != nil {
		return m.State
	}
	return ReadingState_IDLE
}

type SensorReadings struct {
	Readings []*SensorReading `protobuf:"bytes,2,rep,name=readings" json:"readings,omitempty"`
}

func (m *SensorReadings) Reset()                    { *m = SensorReadings{} }
func (m *SensorReadings) String() string            { return proto.CompactTextString(m) }
func (*SensorReadings) ProtoMessage()               {}
func (*SensorReadings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SensorReadings) GetReadings() []*SensorReading {
	if m != nil {
		return m.Readings
	}
	return nil
}

type SensorReading struct {
	Time  uint64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Value float32 `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
}

func (m *SensorReading) Reset()                    { *m = SensorReading{} }
func (m *SensorReading) String() string            { return proto.CompactTextString(m) }
func (*SensorReading) ProtoMessage()               {}
func (*SensorReading) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SensorReading) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SensorReading) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type WireMessageQuery struct {
	Type                    QueryType                `protobuf:"varint,1,opt,name=type,enum=fk_module.QueryType" json:"type,omitempty"`
	QueryCapabilities       *QueryCapabilities       `protobuf:"bytes,2,opt,name=queryCapabilities" json:"queryCapabilities,omitempty"`
	QuerySensorCapabilities *QuerySensorCapabilities `protobuf:"bytes,3,opt,name=querySensorCapabilities" json:"querySensorCapabilities,omitempty"`
	BeginTakeReadings       *BeginTakeReadings       `protobuf:"bytes,4,opt,name=beginTakeReadings" json:"beginTakeReadings,omitempty"`
	QueryReadingStatus      *QueryReadingStatus      `protobuf:"bytes,5,opt,name=queryReadingStatus" json:"queryReadingStatus,omitempty"`
}

func (m *WireMessageQuery) Reset()                    { *m = WireMessageQuery{} }
func (m *WireMessageQuery) String() string            { return proto.CompactTextString(m) }
func (*WireMessageQuery) ProtoMessage()               {}
func (*WireMessageQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *WireMessageQuery) GetType() QueryType {
	if m != nil {
		return m.Type
	}
	return QueryType_QUERY_NONE
}

func (m *WireMessageQuery) GetQueryCapabilities() *QueryCapabilities {
	if m != nil {
		return m.QueryCapabilities
	}
	return nil
}

func (m *WireMessageQuery) GetQuerySensorCapabilities() *QuerySensorCapabilities {
	if m != nil {
		return m.QuerySensorCapabilities
	}
	return nil
}

func (m *WireMessageQuery) GetBeginTakeReadings() *BeginTakeReadings {
	if m != nil {
		return m.BeginTakeReadings
	}
	return nil
}

func (m *WireMessageQuery) GetQueryReadingStatus() *QueryReadingStatus {
	if m != nil {
		return m.QueryReadingStatus
	}
	return nil
}

type Error struct {
	Type    ErrorType `protobuf:"varint,1,opt,name=type,enum=fk_module.ErrorType" json:"type,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Error) GetType() ErrorType {
	if m != nil {
		return m.Type
	}
	return ErrorType_NONE
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type WireMessageReply struct {
	Type               ReplyType           `protobuf:"varint,1,opt,name=type,enum=fk_module.ReplyType" json:"type,omitempty"`
	Error              *Error              `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Capabilities       *Capabilities       `protobuf:"bytes,3,opt,name=capabilities" json:"capabilities,omitempty"`
	SensorCapabilities *SensorCapabilities `protobuf:"bytes,4,opt,name=sensorCapabilities" json:"sensorCapabilities,omitempty"`
	ReadingStatus      *ReadingStatus      `protobuf:"bytes,5,opt,name=readingStatus" json:"readingStatus,omitempty"`
	SensorReadings     *SensorReadings     `protobuf:"bytes,6,opt,name=sensorReadings" json:"sensorReadings,omitempty"`
}

func (m *WireMessageReply) Reset()                    { *m = WireMessageReply{} }
func (m *WireMessageReply) String() string            { return proto.CompactTextString(m) }
func (*WireMessageReply) ProtoMessage()               {}
func (*WireMessageReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *WireMessageReply) GetType() ReplyType {
	if m != nil {
		return m.Type
	}
	return ReplyType_REPLY_NONE
}

func (m *WireMessageReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *WireMessageReply) GetCapabilities() *Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *WireMessageReply) GetSensorCapabilities() *SensorCapabilities {
	if m != nil {
		return m.SensorCapabilities
	}
	return nil
}

func (m *WireMessageReply) GetReadingStatus() *ReadingStatus {
	if m != nil {
		return m.ReadingStatus
	}
	return nil
}

func (m *WireMessageReply) GetSensorReadings() *SensorReadings {
	if m != nil {
		return m.SensorReadings
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryCapabilities)(nil), "fk_module.QueryCapabilities")
	proto.RegisterType((*QuerySensorCapabilities)(nil), "fk_module.QuerySensorCapabilities")
	proto.RegisterType((*Capabilities)(nil), "fk_module.Capabilities")
	proto.RegisterType((*SensorCapabilities)(nil), "fk_module.SensorCapabilities")
	proto.RegisterType((*BeginTakeReadings)(nil), "fk_module.BeginTakeReadings")
	proto.RegisterType((*QueryReadingStatus)(nil), "fk_module.QueryReadingStatus")
	proto.RegisterType((*ReadingStatus)(nil), "fk_module.ReadingStatus")
	proto.RegisterType((*SensorReadings)(nil), "fk_module.SensorReadings")
	proto.RegisterType((*SensorReading)(nil), "fk_module.SensorReading")
	proto.RegisterType((*WireMessageQuery)(nil), "fk_module.WireMessageQuery")
	proto.RegisterType((*Error)(nil), "fk_module.Error")
	proto.RegisterType((*WireMessageReply)(nil), "fk_module.WireMessageReply")
	proto.RegisterEnum("fk_module.QueryType", QueryType_name, QueryType_value)
	proto.RegisterEnum("fk_module.ReplyType", ReplyType_name, ReplyType_value)
	proto.RegisterEnum("fk_module.ModuleType", ModuleType_name, ModuleType_value)
	proto.RegisterEnum("fk_module.ReadingState", ReadingState_name, ReadingState_value)
	proto.RegisterEnum("fk_module.ErrorType", ErrorType_name, ErrorType_value)
}

func init() { proto.RegisterFile("fk-module.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 779 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0x5b, 0x6f, 0xda, 0x48,
	0x14, 0x8e, 0x0d, 0x26, 0xe1, 0x10, 0x88, 0x33, 0x62, 0x13, 0x47, 0xda, 0xac, 0x90, 0x1f, 0x56,
	0x04, 0x6d, 0x22, 0x2d, 0xad, 0xd4, 0x56, 0x95, 0x22, 0x19, 0x98, 0x46, 0x6e, 0xc0, 0x24, 0x63,
	0xa3, 0x36, 0x52, 0x25, 0x64, 0xc2, 0x24, 0xb2, 0xc2, 0x2d, 0xb6, 0x89, 0x9a, 0xc7, 0x3e, 0xf7,
	0xa9, 0xbf, 0xb5, 0x7f, 0xa0, 0xf2, 0x8c, 0x31, 0xbe, 0x90, 0x3c, 0x31, 0xe7, 0xfe, 0x7d, 0xf3,
	0x9d, 0x31, 0xb0, 0x77, 0xf7, 0x70, 0x3a, 0x9d, 0x8f, 0x97, 0x13, 0x7a, 0xb6, 0x70, 0xe7, 0xfe,
	0x1c, 0x15, 0xef, 0x1e, 0x86, 0xdc, 0xa1, 0xf6, 0x60, 0xff, 0x7a, 0x49, 0xdd, 0xe7, 0xb6, 0xbd,
	0xb0, 0x47, 0xce, 0xc4, 0xf1, 0x1d, 0xea, 0x21, 0x05, 0xb6, 0x9f, 0xa8, 0xeb, 0x39, 0xf3, 0x99,
	0x22, 0xd4, 0x84, 0x7a, 0x8e, 0xac, 0x4c, 0xf4, 0x0f, 0xc0, 0xad, 0x3d, 0x99, 0x50, 0xd7, 0x72,
	0xa6, 0x54, 0x11, 0x6b, 0x42, 0xbd, 0x4c, 0x62, 0x1e, 0xf5, 0x7f, 0x38, 0x64, 0xed, 0x4c, 0x3a,
	0xf3, 0xe6, 0x6e, 0xa2, 0xe9, 0x01, 0x14, 0x3c, 0xe6, 0x65, 0x65, 0x12, 0x09, 0x2d, 0xf5, 0x97,
	0x00, 0xbb, 0xaf, 0x4d, 0x97, 0xd6, 0xd3, 0x4f, 0x20, 0xef, 0x3f, 0x2f, 0xf8, 0xdc, 0x4a, 0xf3,
	0xaf, 0xb3, 0x88, 0xc6, 0x59, 0x8f, 0xfd, 0x58, 0xcf, 0x0b, 0x4a, 0x58, 0x0a, 0x42, 0x90, 0x9f,
	0xd9, 0x53, 0xaa, 0xe4, 0x6a, 0x42, 0xbd, 0x48, 0xd8, 0x19, 0xd5, 0x61, 0x6f, 0xb6, 0x9c, 0x8e,
	0xa8, 0xdb, 0xbf, 0xe3, 0xf8, 0x3c, 0x25, 0xcf, 0x06, 0xa4, 0xdd, 0xea, 0x7b, 0x40, 0x1b, 0x18,
	0x54, 0x40, 0x74, 0xc6, 0x21, 0x26, 0xd1, 0x19, 0x47, 0x33, 0xc4, 0xf5, 0x0c, 0xf5, 0x04, 0xf6,
	0x5b, 0xf4, 0xde, 0x99, 0x59, 0xf6, 0x03, 0x25, 0xd4, 0x1e, 0x3b, 0xb3, 0x7b, 0x0f, 0x55, 0x41,
	0x72, 0x66, 0x63, 0xfa, 0x3d, 0xac, 0xe5, 0x86, 0x5a, 0x05, 0xc4, 0xee, 0x2a, 0x4c, 0x33, 0x7d,
	0xdb, 0x5f, 0x7a, 0xea, 0x39, 0x94, 0x13, 0x0e, 0x74, 0x0a, 0x92, 0xe7, 0xdb, 0x3e, 0x65, 0xc5,
	0x95, 0xe6, 0x61, 0x8c, 0x75, 0x2c, 0x91, 0x12, 0x9e, 0xa5, 0x7e, 0x82, 0x0a, 0x87, 0x1e, 0x4d,
	0x7f, 0x0b, 0x3b, 0x6e, 0x78, 0x56, 0xc4, 0x5a, 0xae, 0x5e, 0x6a, 0x2a, 0xb1, 0x1e, 0x89, 0x64,
	0x12, 0x65, 0xaa, 0x1f, 0xa0, 0x9c, 0x08, 0x05, 0x6c, 0xfd, 0x95, 0xe8, 0x79, 0xc2, 0xce, 0x01,
	0xb1, 0x27, 0x7b, 0xb2, 0xe4, 0xd7, 0x2c, 0x12, 0x6e, 0xa8, 0x3f, 0x72, 0x20, 0x7f, 0x71, 0x5c,
	0xda, 0xa3, 0x9e, 0x67, 0xdf, 0x53, 0x46, 0x12, 0xd5, 0x43, 0xed, 0x38, 0x8b, 0x6a, 0x0c, 0x01,
	0x8b, 0xc7, 0xa4, 0xfb, 0x0c, 0xfb, 0x8f, 0xe9, 0x95, 0x64, 0x53, 0x4b, 0xcd, 0xbf, 0xd3, 0x65,
	0xf1, 0x1c, 0x92, 0x2d, 0x43, 0xdf, 0xe0, 0xf0, 0x71, 0xf3, 0x3e, 0x32, 0xc8, 0xa5, 0xa6, 0x9a,
	0xee, 0x98, 0xcd, 0x24, 0x2f, 0xb5, 0x08, 0x90, 0x8e, 0xd2, 0x62, 0xb3, 0x95, 0x4a, 0x22, 0xcd,
	0x2c, 0x04, 0xc9, 0x96, 0xa1, 0x1e, 0xa0, 0xc7, 0xcc, 0x36, 0x28, 0x12, 0x6b, 0x76, 0x9c, 0x06,
	0x99, 0x48, 0x22, 0x1b, 0x0a, 0xd5, 0x4b, 0x90, 0xb0, 0xeb, 0xce, 0xdd, 0x57, 0xee, 0x9d, 0xc5,
	0x63, 0xf7, 0xae, 0xc0, 0xf6, 0x94, 0x2b, 0x16, 0x6e, 0xf4, 0xca, 0x54, 0x7f, 0x8b, 0x09, 0x41,
	0x09, 0x5d, 0x4c, 0x5e, 0x13, 0x94, 0xc5, 0x63, 0x8d, 0xff, 0x05, 0x89, 0x06, 0xb3, 0x42, 0x11,
	0xe5, 0x34, 0x06, 0xc2, 0xc3, 0xe8, 0x23, 0xec, 0xde, 0x66, 0x15, 0x8a, 0x2f, 0x7c, 0x42, 0x96,
	0x44, 0x72, 0x70, 0x7f, 0x5e, 0x56, 0xe4, 0x7c, 0xe6, 0xfe, 0x36, 0xe8, 0xbb, 0xa1, 0x10, 0x9d,
	0x43, 0xd9, 0xdd, 0xa0, 0x84, 0xb2, 0xf9, 0xf5, 0x2d, 0x3d, 0x92, 0x4c, 0x47, 0x1a, 0x54, 0xbc,
	0xc4, 0x33, 0x54, 0x0a, 0xac, 0xc1, 0xd1, 0x4b, 0x4f, 0xcf, 0x23, 0xa9, 0x82, 0xc6, 0x4f, 0x01,
	0x8a, 0xd1, 0xdb, 0x40, 0x15, 0x80, 0xeb, 0x01, 0x26, 0x37, 0x43, 0xa3, 0x6f, 0x60, 0x79, 0x0b,
	0x1d, 0x00, 0xe2, 0x76, 0x5b, 0xbb, 0xd2, 0x5a, 0x7a, 0x57, 0xb7, 0x74, 0x6c, 0xca, 0x02, 0x3a,
	0x86, 0x23, 0xee, 0x37, 0xb1, 0x61, 0xf6, 0x49, 0x32, 0x2c, 0xae, 0xc3, 0x2d, 0x7c, 0xa1, 0x1b,
	0x43, 0x4b, 0xbb, 0xc4, 0x43, 0x82, 0xb5, 0x8e, 0x6e, 0x5c, 0x98, 0x72, 0x0e, 0x29, 0x50, 0xe5,
	0xe1, 0xd0, 0x37, 0x34, 0x2d, 0xcd, 0x1a, 0x98, 0x72, 0xbe, 0x31, 0x87, 0x62, 0xa4, 0x6b, 0x00,
	0x86, 0xe0, 0xab, 0x6e, 0x04, 0x66, 0x0f, 0x4a, 0xdc, 0x26, 0xd8, 0x22, 0x37, 0xb2, 0xb0, 0x76,
	0x60, 0x42, 0xfa, 0x44, 0x16, 0x03, 0xb8, 0xdc, 0x91, 0xc0, 0xc3, 0x06, 0xae, 0x2a, 0x53, 0x03,
	0xff, 0x03, 0x58, 0x7f, 0xd5, 0x11, 0x40, 0x81, 0x13, 0x92, 0xb7, 0x10, 0x82, 0x4a, 0xbb, 0xdf,
	0xeb, 0x0d, 0x0c, 0xbd, 0xad, 0x59, 0x7a, 0xdf, 0x30, 0x65, 0xa1, 0xf1, 0x0e, 0x76, 0xe3, 0x5f,
	0x43, 0xb4, 0x03, 0x79, 0xbd, 0xd3, 0x0d, 0xb0, 0x15, 0x41, 0x62, 0x5c, 0x65, 0x21, 0x70, 0xb6,
	0x06, 0xe6, 0x8d, 0x2c, 0x06, 0xa7, 0x4e, 0x00, 0x3d, 0xd7, 0x68, 0x42, 0x31, 0x7a, 0x08, 0x81,
	0x3b, 0x64, 0x54, 0x82, 0xed, 0x0b, 0x6c, 0x60, 0xa2, 0x75, 0x65, 0x21, 0xa0, 0x3b, 0x30, 0xf0,
	0xd7, 0x2b, 0xdc, 0xb6, 0x70, 0x47, 0x16, 0x47, 0x05, 0xf6, 0x37, 0xfa, 0xe6, 0x4f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x70, 0x5b, 0x85, 0x73, 0x59, 0x07, 0x00, 0x00,
}
