/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Thu Aug 24 16:36:32 2017. */

#ifndef PB_FK_MODULE_FK_MODULE_PB_H_INCLUDED
#define PB_FK_MODULE_FK_MODULE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _fk_module_ModuleType {
    fk_module_ModuleType_SENSOR = 0,
    fk_module_ModuleType_COMMUNICATIONS = 1
} fk_module_ModuleType;
#define _fk_module_ModuleType_MIN fk_module_ModuleType_SENSOR
#define _fk_module_ModuleType_MAX fk_module_ModuleType_COMMUNICATIONS
#define _fk_module_ModuleType_ARRAYSIZE ((fk_module_ModuleType)(fk_module_ModuleType_COMMUNICATIONS+1))

typedef enum _fk_module_ReadingState {
    fk_module_ReadingState_IDLE = 0,
    fk_module_ReadingState_BUSY = 1,
    fk_module_ReadingState_DONE = 2
} fk_module_ReadingState;
#define _fk_module_ReadingState_MIN fk_module_ReadingState_IDLE
#define _fk_module_ReadingState_MAX fk_module_ReadingState_DONE
#define _fk_module_ReadingState_ARRAYSIZE ((fk_module_ReadingState)(fk_module_ReadingState_DONE+1))

/* Struct definitions */
typedef struct _fk_module_QueryReadingStatus {
    char dummy_field;
/* @@protoc_insertion_point(struct:fk_module_QueryReadingStatus) */
} fk_module_QueryReadingStatus;

typedef struct _fk_module_BeginTakeReadings {
    int32_t index;
/* @@protoc_insertion_point(struct:fk_module_BeginTakeReadings) */
} fk_module_BeginTakeReadings;

typedef struct _fk_module_Capabilities {
    int32_t version;
    fk_module_ModuleType type;
    pb_callback_t name;
/* @@protoc_insertion_point(struct:fk_module_Capabilities) */
} fk_module_Capabilities;

typedef struct _fk_module_QueryCapabilities {
    int64_t version;
/* @@protoc_insertion_point(struct:fk_module_QueryCapabilities) */
} fk_module_QueryCapabilities;

typedef struct _fk_module_ReadingStatus {
    fk_module_ReadingState state;
/* @@protoc_insertion_point(struct:fk_module_ReadingStatus) */
} fk_module_ReadingStatus;

typedef struct _fk_module_SensorCapabilities {
    int32_t numberOfReadings;
    pb_callback_t readings;
/* @@protoc_insertion_point(struct:fk_module_SensorCapabilities) */
} fk_module_SensorCapabilities;

typedef struct _fk_module_SensorReading {
    int32_t index;
    float value;
/* @@protoc_insertion_point(struct:fk_module_SensorReading) */
} fk_module_SensorReading;

typedef struct _fk_module_SensorReadingMeta {
    int32_t index;
    pb_callback_t name;
/* @@protoc_insertion_point(struct:fk_module_SensorReadingMeta) */
} fk_module_SensorReadingMeta;

typedef struct _fk_module_SensorReadings {
    int64_t time;
    pb_callback_t readings;
/* @@protoc_insertion_point(struct:fk_module_SensorReadings) */
} fk_module_SensorReadings;

typedef struct _fk_module_WireMessageQuery {
    fk_module_QueryCapabilities queryCapabilities;
    fk_module_BeginTakeReadings beginTakeReadings;
    fk_module_QueryReadingStatus queryReadingStatus;
/* @@protoc_insertion_point(struct:fk_module_WireMessageQuery) */
} fk_module_WireMessageQuery;

typedef struct _fk_module_WireMessageReply {
    fk_module_Capabilities capabilities;
    fk_module_SensorCapabilities sensorCapabilities;
    fk_module_ReadingStatus readingStatus;
    fk_module_SensorReadings sensorReadings;
/* @@protoc_insertion_point(struct:fk_module_WireMessageReply) */
} fk_module_WireMessageReply;

/* Default values for struct fields */

/* Initializer values for message structs */
#define fk_module_QueryCapabilities_init_default {0}
#define fk_module_Capabilities_init_default      {0, (fk_module_ModuleType)0, {{NULL}, NULL}}
#define fk_module_SensorCapabilities_init_default {0, {{NULL}, NULL}}
#define fk_module_SensorReadingMeta_init_default {0, {{NULL}, NULL}}
#define fk_module_BeginTakeReadings_init_default {0}
#define fk_module_QueryReadingStatus_init_default {0}
#define fk_module_ReadingStatus_init_default     {(fk_module_ReadingState)0}
#define fk_module_SensorReadings_init_default    {0, {{NULL}, NULL}}
#define fk_module_SensorReading_init_default     {0, 0}
#define fk_module_WireMessageQuery_init_default  {fk_module_QueryCapabilities_init_default, fk_module_BeginTakeReadings_init_default, fk_module_QueryReadingStatus_init_default}
#define fk_module_WireMessageReply_init_default  {fk_module_Capabilities_init_default, fk_module_SensorCapabilities_init_default, fk_module_ReadingStatus_init_default, fk_module_SensorReadings_init_default}
#define fk_module_QueryCapabilities_init_zero    {0}
#define fk_module_Capabilities_init_zero         {0, (fk_module_ModuleType)0, {{NULL}, NULL}}
#define fk_module_SensorCapabilities_init_zero   {0, {{NULL}, NULL}}
#define fk_module_SensorReadingMeta_init_zero    {0, {{NULL}, NULL}}
#define fk_module_BeginTakeReadings_init_zero    {0}
#define fk_module_QueryReadingStatus_init_zero   {0}
#define fk_module_ReadingStatus_init_zero        {(fk_module_ReadingState)0}
#define fk_module_SensorReadings_init_zero       {0, {{NULL}, NULL}}
#define fk_module_SensorReading_init_zero        {0, 0}
#define fk_module_WireMessageQuery_init_zero     {fk_module_QueryCapabilities_init_zero, fk_module_BeginTakeReadings_init_zero, fk_module_QueryReadingStatus_init_zero}
#define fk_module_WireMessageReply_init_zero     {fk_module_Capabilities_init_zero, fk_module_SensorCapabilities_init_zero, fk_module_ReadingStatus_init_zero, fk_module_SensorReadings_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define fk_module_BeginTakeReadings_index_tag    1
#define fk_module_Capabilities_version_tag       1
#define fk_module_Capabilities_type_tag          2
#define fk_module_Capabilities_name_tag          3
#define fk_module_QueryCapabilities_version_tag  1
#define fk_module_ReadingStatus_state_tag        1
#define fk_module_SensorCapabilities_numberOfReadings_tag 1
#define fk_module_SensorCapabilities_readings_tag 2
#define fk_module_SensorReading_index_tag        1
#define fk_module_SensorReading_value_tag        2
#define fk_module_SensorReadingMeta_index_tag    1
#define fk_module_SensorReadingMeta_name_tag     2
#define fk_module_SensorReadings_time_tag        1
#define fk_module_SensorReadings_readings_tag    2
#define fk_module_WireMessageQuery_queryCapabilities_tag 1
#define fk_module_WireMessageQuery_beginTakeReadings_tag 2
#define fk_module_WireMessageQuery_queryReadingStatus_tag 3
#define fk_module_WireMessageReply_capabilities_tag 1
#define fk_module_WireMessageReply_sensorCapabilities_tag 2
#define fk_module_WireMessageReply_readingStatus_tag 3
#define fk_module_WireMessageReply_sensorReadings_tag 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t fk_module_QueryCapabilities_fields[2];
extern const pb_field_t fk_module_Capabilities_fields[4];
extern const pb_field_t fk_module_SensorCapabilities_fields[3];
extern const pb_field_t fk_module_SensorReadingMeta_fields[3];
extern const pb_field_t fk_module_BeginTakeReadings_fields[2];
extern const pb_field_t fk_module_QueryReadingStatus_fields[1];
extern const pb_field_t fk_module_ReadingStatus_fields[2];
extern const pb_field_t fk_module_SensorReadings_fields[3];
extern const pb_field_t fk_module_SensorReading_fields[3];
extern const pb_field_t fk_module_WireMessageQuery_fields[4];
extern const pb_field_t fk_module_WireMessageReply_fields[5];

/* Maximum encoded size of messages (where known) */
#define fk_module_QueryCapabilities_size         11
/* fk_module_Capabilities_size depends on runtime parameters */
/* fk_module_SensorCapabilities_size depends on runtime parameters */
/* fk_module_SensorReadingMeta_size depends on runtime parameters */
#define fk_module_BeginTakeReadings_size         11
#define fk_module_QueryReadingStatus_size        0
#define fk_module_ReadingStatus_size             2
/* fk_module_SensorReadings_size depends on runtime parameters */
#define fk_module_SensorReading_size             16
#define fk_module_WireMessageQuery_size          28
#define fk_module_WireMessageReply_size          (22 + fk_module_Capabilities_size + fk_module_SensorCapabilities_size + fk_module_SensorReadings_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FK_MODULE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
