syntax = "proto3";
package fk_module;

enum QueryType {
  QUERY_NONE = 0;
  QUERY_CAPABILITIES = 1;
  QUERY_SENSOR_CAPABILITIES = 2;
  QUERY_BEGIN_TAKE_READINGS = 3;
  QUERY_READING_STATUS = 4;
  QUERY_CUSTOM = 5;
  QUERY_DATA_APPEND = 6;
  QUERY_DATA_CLEAR = 7;
  QUERY_BEGIN_TRANSMISSION = 8;
  QUERY_TRANSMISSION_STATUS = 9;
  QUERY_DATA_PREPARE = 10;
  QUERY_DATA_VERIFY = 11;
}

enum ReplyType {
  REPLY_NONE = 0;
  REPLY_RETRY = 1;
  REPLY_ERROR = 2;
  REPLY_CAPABILITIES = 3;
  REPLY_SENSOR_CAPABILITIES = 4;
  REPLY_READING_STATUS = 5;
  REPLY_CUSTOM = 6;
  REPLY_DATA = 7;
  REPLY_TRANSMISSION_STATUS = 8;
}

enum ModuleType {
  SENSOR = 0;
  COMMUNICATIONS = 1;
}

enum ReadingState {
  IDLE = 0;
  BEGIN = 1;
  BUSY = 2;
  DONE = 3;
}

message QueryCapabilities {
  int32 version = 1;
  uint32 callerTime = 2;
}

message QuerySensorCapabilities {
  int32 sensor = 1;
}

message Firmware {
  string git = 1;
  string build = 2;
}

message Capabilities {
  int32 version = 1;
  ModuleType type = 2;
  string name = 3;
  string module = 7;
  int32 numberOfSensors = 4;
  Firmware firmware = 5;
  int32 minimumNumberOfReadings = 6;
}

message SensorCapabilities {
  int32 id = 1;
  string name = 2;
  string unitOfMeasure = 3;
}

message BeginTakeReadings {
  int32 index = 1;
  uint32 callerTime = 2;
  uint32 number = 3;
}

message QueryReadingStatus {
  uint32 sleep = 1;
}

message ReadingStatus {
  ReadingState state = 1;
  uint32 backoff = 2;
  uint32 elapsed = 3;
}

message SensorReadings {
}

message SensorReading  {
  int32 sensor = 1;
  uint32 time = 2;
  float value = 3;
}

message Custom {
  bytes message = 1;
}

message Data {
  int32 size = 1;
  bytes data = 2;
  int32 kind = 3;
  bytes checksum = 4;
}

message DataStatus {
  int32 size = 1;
}

message BeginTransmission {
  int32 kind = 1;
}

message QueryTransmissionStatus {
}

enum TransmissionState {
  TRANSMISSION_IDLE = 0;
  TRANSMISSION_BEGIN = 1;
  TRANSMISSION_BUSY = 2;
  TRANSMISSION_DONE = 3;
}

message TransmissionStatus {
  TransmissionState state = 1;
}

message WireMessageQuery {
  QueryType type = 1;
  QueryCapabilities queryCapabilities = 2;

  QuerySensorCapabilities querySensorCapabilities = 3;
  BeginTakeReadings beginTakeReadings = 4;
  QueryReadingStatus queryReadingStatus = 5;

  Custom custom = 6;
  Data data = 7;

  BeginTransmission beginTransmission = 8;
  QueryTransmissionStatus queryTransmissionStatus = 9;
}

enum ErrorType {
  NONE = 0;
  GENERAL = 1;
  UNEXPECTED = 2;
}

message Error {
  ErrorType type = 1;
  string message = 2;
}

message WireMessageReply {
  ReplyType type = 1;
  Error error = 2;
  Capabilities capabilities = 3;
  SensorCapabilities sensorCapabilities = 4;
  ReadingStatus readingStatus = 5;
  SensorReading sensorReading = 6;
  Custom custom = 7;
  DataStatus data = 8;
  TransmissionStatus transmissionStatus = 9;
}
