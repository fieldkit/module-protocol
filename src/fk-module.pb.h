/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_FK_MODULE_FK_MODULE_PB_H_INCLUDED
#define PB_FK_MODULE_FK_MODULE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _fk_module_QueryType {
    fk_module_QueryType_QUERY_NONE = 0,
    fk_module_QueryType_QUERY_CAPABILITIES = 1,
    fk_module_QueryType_QUERY_SENSOR_CAPABILITIES = 2,
    fk_module_QueryType_QUERY_BEGIN_TAKE_READINGS = 3,
    fk_module_QueryType_QUERY_READING_STATUS = 4,
    fk_module_QueryType_QUERY_CUSTOM = 5,
    fk_module_QueryType_QUERY_DATA_APPEND = 6,
    fk_module_QueryType_QUERY_DATA_CLEAR = 7,
    fk_module_QueryType_QUERY_BEGIN_TRANSMISSION = 8,
    fk_module_QueryType_QUERY_TRANSMISSION_STATUS = 9,
    fk_module_QueryType_QUERY_DATA_PREPARE = 10,
    fk_module_QueryType_QUERY_DATA_VERIFY = 11,
    fk_module_QueryType_QUERY_FIRMWARE = 12
} fk_module_QueryType;
#define _fk_module_QueryType_MIN fk_module_QueryType_QUERY_NONE
#define _fk_module_QueryType_MAX fk_module_QueryType_QUERY_FIRMWARE
#define _fk_module_QueryType_ARRAYSIZE ((fk_module_QueryType)(fk_module_QueryType_QUERY_FIRMWARE+1))

typedef enum _fk_module_ReplyType {
    fk_module_ReplyType_REPLY_NONE = 0,
    fk_module_ReplyType_REPLY_RETRY = 1,
    fk_module_ReplyType_REPLY_ERROR = 2,
    fk_module_ReplyType_REPLY_CAPABILITIES = 3,
    fk_module_ReplyType_REPLY_SENSOR_CAPABILITIES = 4,
    fk_module_ReplyType_REPLY_READING_STATUS = 5,
    fk_module_ReplyType_REPLY_CUSTOM = 6,
    fk_module_ReplyType_REPLY_DATA = 7,
    fk_module_ReplyType_REPLY_TRANSMISSION_STATUS = 8,
    fk_module_ReplyType_REPLY_SUCCESS = 9,
    fk_module_ReplyType_REPLY_BUSY = 10,
    fk_module_ReplyType_REPLY_FIRMWARE = 11
} fk_module_ReplyType;
#define _fk_module_ReplyType_MIN fk_module_ReplyType_REPLY_NONE
#define _fk_module_ReplyType_MAX fk_module_ReplyType_REPLY_FIRMWARE
#define _fk_module_ReplyType_ARRAYSIZE ((fk_module_ReplyType)(fk_module_ReplyType_REPLY_FIRMWARE+1))

typedef enum _fk_module_ModuleType {
    fk_module_ModuleType_SENSOR = 0,
    fk_module_ModuleType_COMMUNICATIONS = 1
} fk_module_ModuleType;
#define _fk_module_ModuleType_MIN fk_module_ModuleType_SENSOR
#define _fk_module_ModuleType_MAX fk_module_ModuleType_COMMUNICATIONS
#define _fk_module_ModuleType_ARRAYSIZE ((fk_module_ModuleType)(fk_module_ModuleType_COMMUNICATIONS+1))

typedef enum _fk_module_ReadingState {
    fk_module_ReadingState_IDLE = 0,
    fk_module_ReadingState_BEGIN = 1,
    fk_module_ReadingState_BUSY = 2,
    fk_module_ReadingState_DONE = 3
} fk_module_ReadingState;
#define _fk_module_ReadingState_MIN fk_module_ReadingState_IDLE
#define _fk_module_ReadingState_MAX fk_module_ReadingState_DONE
#define _fk_module_ReadingState_ARRAYSIZE ((fk_module_ReadingState)(fk_module_ReadingState_DONE+1))

typedef enum _fk_module_RequiredUptime {
    fk_module_RequiredUptime_ALWAYS = 0,
    fk_module_RequiredUptime_READINGS_ONLY = 1
} fk_module_RequiredUptime;
#define _fk_module_RequiredUptime_MIN fk_module_RequiredUptime_ALWAYS
#define _fk_module_RequiredUptime_MAX fk_module_RequiredUptime_READINGS_ONLY
#define _fk_module_RequiredUptime_ARRAYSIZE ((fk_module_RequiredUptime)(fk_module_RequiredUptime_READINGS_ONLY+1))

typedef enum _fk_module_TransmissionState {
    fk_module_TransmissionState_TRANSMISSION_IDLE = 0,
    fk_module_TransmissionState_TRANSMISSION_BEGIN = 1,
    fk_module_TransmissionState_TRANSMISSION_BUSY = 2,
    fk_module_TransmissionState_TRANSMISSION_DONE = 3
} fk_module_TransmissionState;
#define _fk_module_TransmissionState_MIN fk_module_TransmissionState_TRANSMISSION_IDLE
#define _fk_module_TransmissionState_MAX fk_module_TransmissionState_TRANSMISSION_DONE
#define _fk_module_TransmissionState_ARRAYSIZE ((fk_module_TransmissionState)(fk_module_TransmissionState_TRANSMISSION_DONE+1))

typedef enum _fk_module_ErrorType {
    fk_module_ErrorType_NONE = 0,
    fk_module_ErrorType_GENERAL = 1,
    fk_module_ErrorType_UNEXPECTED = 2
} fk_module_ErrorType;
#define _fk_module_ErrorType_MIN fk_module_ErrorType_NONE
#define _fk_module_ErrorType_MAX fk_module_ErrorType_UNEXPECTED
#define _fk_module_ErrorType_ARRAYSIZE ((fk_module_ErrorType)(fk_module_ErrorType_UNEXPECTED+1))

/* Struct definitions */
typedef struct _fk_module_Custom {
    pb_callback_t message;
/* @@protoc_insertion_point(struct:fk_module_Custom) */
} fk_module_Custom;


typedef struct _fk_module_QueryTransmissionStatus {
    char dummy_field;
/* @@protoc_insertion_point(struct:fk_module_QueryTransmissionStatus) */
} fk_module_QueryTransmissionStatus;


typedef struct _fk_module_SensorReadings {
    char dummy_field;
/* @@protoc_insertion_point(struct:fk_module_SensorReadings) */
} fk_module_SensorReadings;


typedef struct _fk_module_BeginTakeReadings {
    int32_t index;
    uint32_t callerTime;
    uint32_t number;
/* @@protoc_insertion_point(struct:fk_module_BeginTakeReadings) */
} fk_module_BeginTakeReadings;


typedef struct _fk_module_BeginTransmission {
    int32_t kind;
/* @@protoc_insertion_point(struct:fk_module_BeginTransmission) */
} fk_module_BeginTransmission;


typedef struct _fk_module_Data {
    int32_t size;
    pb_callback_t data;
    int32_t kind;
    pb_callback_t checksum;
    int32_t bank;
    pb_callback_t etag;
/* @@protoc_insertion_point(struct:fk_module_Data) */
} fk_module_Data;


typedef struct _fk_module_DataStatus {
    int32_t size;
/* @@protoc_insertion_point(struct:fk_module_DataStatus) */
} fk_module_DataStatus;


typedef struct _fk_module_Error {
    fk_module_ErrorType type;
    pb_callback_t message;
/* @@protoc_insertion_point(struct:fk_module_Error) */
} fk_module_Error;


typedef struct _fk_module_Firmware {
    pb_callback_t git;
    pb_callback_t build;
    uint32_t size;
    pb_callback_t etag;
    uint32_t time;
/* @@protoc_insertion_point(struct:fk_module_Firmware) */
} fk_module_Firmware;


typedef struct _fk_module_QueryCapabilities {
    int32_t version;
    uint32_t callerTime;
/* @@protoc_insertion_point(struct:fk_module_QueryCapabilities) */
} fk_module_QueryCapabilities;


typedef struct _fk_module_QueryReadingStatus {
    uint32_t sleep;
/* @@protoc_insertion_point(struct:fk_module_QueryReadingStatus) */
} fk_module_QueryReadingStatus;


typedef struct _fk_module_QuerySensorCapabilities {
    int32_t sensor;
/* @@protoc_insertion_point(struct:fk_module_QuerySensorCapabilities) */
} fk_module_QuerySensorCapabilities;


typedef struct _fk_module_ReadingStatus {
    fk_module_ReadingState state;
    uint32_t backoff;
    uint32_t elapsed;
/* @@protoc_insertion_point(struct:fk_module_ReadingStatus) */
} fk_module_ReadingStatus;


typedef struct _fk_module_SensorCapabilities {
    int32_t id;
    pb_callback_t name;
    pb_callback_t unitOfMeasure;
/* @@protoc_insertion_point(struct:fk_module_SensorCapabilities) */
} fk_module_SensorCapabilities;


typedef struct _fk_module_SensorReading {
    int32_t sensor;
    uint32_t time;
    float value;
/* @@protoc_insertion_point(struct:fk_module_SensorReading) */
} fk_module_SensorReading;


typedef struct _fk_module_TransmissionStatus {
    fk_module_TransmissionState state;
/* @@protoc_insertion_point(struct:fk_module_TransmissionStatus) */
} fk_module_TransmissionStatus;


typedef struct _fk_module_Capabilities {
    int32_t version;
    fk_module_ModuleType type;
    pb_callback_t name;
    int32_t numberOfSensors;
    fk_module_Firmware firmware;
    int32_t minimumNumberOfReadings;
    pb_callback_t module;
    uint32_t compiled;
    fk_module_RequiredUptime requiredUptime;
    uint32_t minimumReadingInterval;
/* @@protoc_insertion_point(struct:fk_module_Capabilities) */
} fk_module_Capabilities;


typedef struct _fk_module_FirmwareReply {
    fk_module_Firmware good;
    fk_module_Firmware pending;
    fk_module_Firmware active;
/* @@protoc_insertion_point(struct:fk_module_FirmwareReply) */
} fk_module_FirmwareReply;


typedef struct _fk_module_WireMessageQuery {
    fk_module_QueryType type;
    fk_module_QueryCapabilities queryCapabilities;
    fk_module_QuerySensorCapabilities querySensorCapabilities;
    fk_module_BeginTakeReadings beginTakeReadings;
    fk_module_QueryReadingStatus queryReadingStatus;
    fk_module_Custom custom;
    fk_module_Data data;
    fk_module_BeginTransmission beginTransmission;
    fk_module_QueryTransmissionStatus queryTransmissionStatus;
/* @@protoc_insertion_point(struct:fk_module_WireMessageQuery) */
} fk_module_WireMessageQuery;


typedef struct _fk_module_WireMessageReply {
    fk_module_ReplyType type;
    fk_module_Error error;
    fk_module_Capabilities capabilities;
    fk_module_SensorCapabilities sensorCapabilities;
    fk_module_ReadingStatus readingStatus;
    fk_module_SensorReading sensorReading;
    fk_module_Custom custom;
    fk_module_DataStatus data;
    fk_module_TransmissionStatus transmissionStatus;
    fk_module_FirmwareReply firmware;
/* @@protoc_insertion_point(struct:fk_module_WireMessageReply) */
} fk_module_WireMessageReply;


/* Initializer values for message structs */
#define fk_module_QueryCapabilities_init_default {0, 0}
#define fk_module_QuerySensorCapabilities_init_default {0}
#define fk_module_Firmware_init_default          {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define fk_module_Capabilities_init_default      {0, _fk_module_ModuleType_MIN, {{NULL}, NULL}, 0, fk_module_Firmware_init_default, 0, {{NULL}, NULL}, 0, _fk_module_RequiredUptime_MIN, 0}
#define fk_module_FirmwareReply_init_default     {fk_module_Firmware_init_default, fk_module_Firmware_init_default, fk_module_Firmware_init_default}
#define fk_module_SensorCapabilities_init_default {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define fk_module_BeginTakeReadings_init_default {0, 0, 0}
#define fk_module_QueryReadingStatus_init_default {0}
#define fk_module_ReadingStatus_init_default     {_fk_module_ReadingState_MIN, 0, 0}
#define fk_module_SensorReadings_init_default    {0}
#define fk_module_SensorReading_init_default     {0, 0, 0}
#define fk_module_Custom_init_default            {{{NULL}, NULL}}
#define fk_module_Data_init_default              {0, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define fk_module_DataStatus_init_default        {0}
#define fk_module_BeginTransmission_init_default {0}
#define fk_module_QueryTransmissionStatus_init_default {0}
#define fk_module_TransmissionStatus_init_default {_fk_module_TransmissionState_MIN}
#define fk_module_WireMessageQuery_init_default  {_fk_module_QueryType_MIN, fk_module_QueryCapabilities_init_default, fk_module_QuerySensorCapabilities_init_default, fk_module_BeginTakeReadings_init_default, fk_module_QueryReadingStatus_init_default, fk_module_Custom_init_default, fk_module_Data_init_default, fk_module_BeginTransmission_init_default, fk_module_QueryTransmissionStatus_init_default}
#define fk_module_Error_init_default             {_fk_module_ErrorType_MIN, {{NULL}, NULL}}
#define fk_module_WireMessageReply_init_default  {_fk_module_ReplyType_MIN, fk_module_Error_init_default, fk_module_Capabilities_init_default, fk_module_SensorCapabilities_init_default, fk_module_ReadingStatus_init_default, fk_module_SensorReading_init_default, fk_module_Custom_init_default, fk_module_DataStatus_init_default, fk_module_TransmissionStatus_init_default, fk_module_FirmwareReply_init_default}
#define fk_module_QueryCapabilities_init_zero    {0, 0}
#define fk_module_QuerySensorCapabilities_init_zero {0}
#define fk_module_Firmware_init_zero             {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define fk_module_Capabilities_init_zero         {0, _fk_module_ModuleType_MIN, {{NULL}, NULL}, 0, fk_module_Firmware_init_zero, 0, {{NULL}, NULL}, 0, _fk_module_RequiredUptime_MIN, 0}
#define fk_module_FirmwareReply_init_zero        {fk_module_Firmware_init_zero, fk_module_Firmware_init_zero, fk_module_Firmware_init_zero}
#define fk_module_SensorCapabilities_init_zero   {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define fk_module_BeginTakeReadings_init_zero    {0, 0, 0}
#define fk_module_QueryReadingStatus_init_zero   {0}
#define fk_module_ReadingStatus_init_zero        {_fk_module_ReadingState_MIN, 0, 0}
#define fk_module_SensorReadings_init_zero       {0}
#define fk_module_SensorReading_init_zero        {0, 0, 0}
#define fk_module_Custom_init_zero               {{{NULL}, NULL}}
#define fk_module_Data_init_zero                 {0, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define fk_module_DataStatus_init_zero           {0}
#define fk_module_BeginTransmission_init_zero    {0}
#define fk_module_QueryTransmissionStatus_init_zero {0}
#define fk_module_TransmissionStatus_init_zero   {_fk_module_TransmissionState_MIN}
#define fk_module_WireMessageQuery_init_zero     {_fk_module_QueryType_MIN, fk_module_QueryCapabilities_init_zero, fk_module_QuerySensorCapabilities_init_zero, fk_module_BeginTakeReadings_init_zero, fk_module_QueryReadingStatus_init_zero, fk_module_Custom_init_zero, fk_module_Data_init_zero, fk_module_BeginTransmission_init_zero, fk_module_QueryTransmissionStatus_init_zero}
#define fk_module_Error_init_zero                {_fk_module_ErrorType_MIN, {{NULL}, NULL}}
#define fk_module_WireMessageReply_init_zero     {_fk_module_ReplyType_MIN, fk_module_Error_init_zero, fk_module_Capabilities_init_zero, fk_module_SensorCapabilities_init_zero, fk_module_ReadingStatus_init_zero, fk_module_SensorReading_init_zero, fk_module_Custom_init_zero, fk_module_DataStatus_init_zero, fk_module_TransmissionStatus_init_zero, fk_module_FirmwareReply_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define fk_module_Custom_message_tag             1
#define fk_module_BeginTakeReadings_index_tag    1
#define fk_module_BeginTakeReadings_callerTime_tag 2
#define fk_module_BeginTakeReadings_number_tag   3
#define fk_module_BeginTransmission_kind_tag     1
#define fk_module_Data_size_tag                  1
#define fk_module_Data_data_tag                  2
#define fk_module_Data_kind_tag                  3
#define fk_module_Data_checksum_tag              4
#define fk_module_Data_bank_tag                  5
#define fk_module_Data_etag_tag                  6
#define fk_module_DataStatus_size_tag            1
#define fk_module_Error_type_tag                 1
#define fk_module_Error_message_tag              2
#define fk_module_Firmware_git_tag               1
#define fk_module_Firmware_build_tag             2
#define fk_module_Firmware_size_tag              3
#define fk_module_Firmware_etag_tag              4
#define fk_module_Firmware_time_tag              5
#define fk_module_QueryCapabilities_version_tag  1
#define fk_module_QueryCapabilities_callerTime_tag 2
#define fk_module_QueryReadingStatus_sleep_tag   1
#define fk_module_QuerySensorCapabilities_sensor_tag 1
#define fk_module_ReadingStatus_state_tag        1
#define fk_module_ReadingStatus_backoff_tag      2
#define fk_module_ReadingStatus_elapsed_tag      3
#define fk_module_SensorCapabilities_id_tag      1
#define fk_module_SensorCapabilities_name_tag    2
#define fk_module_SensorCapabilities_unitOfMeasure_tag 3
#define fk_module_SensorReading_sensor_tag       1
#define fk_module_SensorReading_time_tag         2
#define fk_module_SensorReading_value_tag        3
#define fk_module_TransmissionStatus_state_tag   1
#define fk_module_Capabilities_version_tag       1
#define fk_module_Capabilities_type_tag          2
#define fk_module_Capabilities_name_tag          3
#define fk_module_Capabilities_module_tag        7
#define fk_module_Capabilities_numberOfSensors_tag 4
#define fk_module_Capabilities_firmware_tag      5
#define fk_module_Capabilities_minimumNumberOfReadings_tag 6
#define fk_module_Capabilities_compiled_tag      8
#define fk_module_Capabilities_requiredUptime_tag 9
#define fk_module_Capabilities_minimumReadingInterval_tag 10
#define fk_module_FirmwareReply_good_tag         1
#define fk_module_FirmwareReply_pending_tag      2
#define fk_module_FirmwareReply_active_tag       3
#define fk_module_WireMessageQuery_type_tag      1
#define fk_module_WireMessageQuery_queryCapabilities_tag 2
#define fk_module_WireMessageQuery_querySensorCapabilities_tag 3
#define fk_module_WireMessageQuery_beginTakeReadings_tag 4
#define fk_module_WireMessageQuery_queryReadingStatus_tag 5
#define fk_module_WireMessageQuery_custom_tag    6
#define fk_module_WireMessageQuery_data_tag      7
#define fk_module_WireMessageQuery_beginTransmission_tag 8
#define fk_module_WireMessageQuery_queryTransmissionStatus_tag 9
#define fk_module_WireMessageReply_type_tag      1
#define fk_module_WireMessageReply_error_tag     2
#define fk_module_WireMessageReply_capabilities_tag 3
#define fk_module_WireMessageReply_sensorCapabilities_tag 4
#define fk_module_WireMessageReply_readingStatus_tag 5
#define fk_module_WireMessageReply_sensorReading_tag 6
#define fk_module_WireMessageReply_custom_tag    7
#define fk_module_WireMessageReply_data_tag      8
#define fk_module_WireMessageReply_transmissionStatus_tag 9
#define fk_module_WireMessageReply_firmware_tag  10

/* Struct field encoding specification for nanopb */
#define fk_module_QueryCapabilities_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, version, 1) \
X(a, STATIC, SINGULAR, UINT32, callerTime, 2)
#define fk_module_QueryCapabilities_CALLBACK NULL
#define fk_module_QueryCapabilities_DEFAULT NULL

#define fk_module_QuerySensorCapabilities_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, sensor, 1)
#define fk_module_QuerySensorCapabilities_CALLBACK NULL
#define fk_module_QuerySensorCapabilities_DEFAULT NULL

#define fk_module_Firmware_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING, git, 1) \
X(a, CALLBACK, SINGULAR, STRING, build, 2) \
X(a, STATIC, SINGULAR, UINT32, size, 3) \
X(a, CALLBACK, SINGULAR, STRING, etag, 4) \
X(a, STATIC, SINGULAR, UINT32, time, 5)
#define fk_module_Firmware_CALLBACK pb_default_field_callback
#define fk_module_Firmware_DEFAULT NULL

#define fk_module_Capabilities_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, version, 1) \
X(a, STATIC, SINGULAR, UENUM, type, 2) \
X(a, CALLBACK, SINGULAR, STRING, name, 3) \
X(a, STATIC, SINGULAR, INT32, numberOfSensors, 4) \
X(a, STATIC, SINGULAR, MESSAGE, firmware, 5) \
X(a, STATIC, SINGULAR, INT32, minimumNumberOfReadings, 6) \
X(a, CALLBACK, SINGULAR, STRING, module, 7) \
X(a, STATIC, SINGULAR, UINT32, compiled, 8) \
X(a, STATIC, SINGULAR, UENUM, requiredUptime, 9) \
X(a, STATIC, SINGULAR, UINT32, minimumReadingInterval, 10)
#define fk_module_Capabilities_CALLBACK pb_default_field_callback
#define fk_module_Capabilities_DEFAULT NULL
#define fk_module_Capabilities_firmware_MSGTYPE fk_module_Firmware

#define fk_module_FirmwareReply_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, MESSAGE, good, 1) \
X(a, STATIC, SINGULAR, MESSAGE, pending, 2) \
X(a, STATIC, SINGULAR, MESSAGE, active, 3)
#define fk_module_FirmwareReply_CALLBACK NULL
#define fk_module_FirmwareReply_DEFAULT NULL
#define fk_module_FirmwareReply_good_MSGTYPE fk_module_Firmware
#define fk_module_FirmwareReply_pending_MSGTYPE fk_module_Firmware
#define fk_module_FirmwareReply_active_MSGTYPE fk_module_Firmware

#define fk_module_SensorCapabilities_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, id, 1) \
X(a, CALLBACK, SINGULAR, STRING, name, 2) \
X(a, CALLBACK, SINGULAR, STRING, unitOfMeasure, 3)
#define fk_module_SensorCapabilities_CALLBACK pb_default_field_callback
#define fk_module_SensorCapabilities_DEFAULT NULL

#define fk_module_BeginTakeReadings_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, index, 1) \
X(a, STATIC, SINGULAR, UINT32, callerTime, 2) \
X(a, STATIC, SINGULAR, UINT32, number, 3)
#define fk_module_BeginTakeReadings_CALLBACK NULL
#define fk_module_BeginTakeReadings_DEFAULT NULL

#define fk_module_QueryReadingStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, sleep, 1)
#define fk_module_QueryReadingStatus_CALLBACK NULL
#define fk_module_QueryReadingStatus_DEFAULT NULL

#define fk_module_ReadingStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, state, 1) \
X(a, STATIC, SINGULAR, UINT32, backoff, 2) \
X(a, STATIC, SINGULAR, UINT32, elapsed, 3)
#define fk_module_ReadingStatus_CALLBACK NULL
#define fk_module_ReadingStatus_DEFAULT NULL

#define fk_module_SensorReadings_FIELDLIST(X, a) \

#define fk_module_SensorReadings_CALLBACK NULL
#define fk_module_SensorReadings_DEFAULT NULL

#define fk_module_SensorReading_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, sensor, 1) \
X(a, STATIC, SINGULAR, UINT32, time, 2) \
X(a, STATIC, SINGULAR, FLOAT, value, 3)
#define fk_module_SensorReading_CALLBACK NULL
#define fk_module_SensorReading_DEFAULT NULL

#define fk_module_Custom_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES, message, 1)
#define fk_module_Custom_CALLBACK pb_default_field_callback
#define fk_module_Custom_DEFAULT NULL

#define fk_module_Data_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, size, 1) \
X(a, CALLBACK, SINGULAR, BYTES, data, 2) \
X(a, STATIC, SINGULAR, INT32, kind, 3) \
X(a, CALLBACK, SINGULAR, BYTES, checksum, 4) \
X(a, STATIC, SINGULAR, INT32, bank, 5) \
X(a, CALLBACK, SINGULAR, STRING, etag, 6)
#define fk_module_Data_CALLBACK pb_default_field_callback
#define fk_module_Data_DEFAULT NULL

#define fk_module_DataStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, size, 1)
#define fk_module_DataStatus_CALLBACK NULL
#define fk_module_DataStatus_DEFAULT NULL

#define fk_module_BeginTransmission_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, kind, 1)
#define fk_module_BeginTransmission_CALLBACK NULL
#define fk_module_BeginTransmission_DEFAULT NULL

#define fk_module_QueryTransmissionStatus_FIELDLIST(X, a) \

#define fk_module_QueryTransmissionStatus_CALLBACK NULL
#define fk_module_QueryTransmissionStatus_DEFAULT NULL

#define fk_module_TransmissionStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, state, 1)
#define fk_module_TransmissionStatus_CALLBACK NULL
#define fk_module_TransmissionStatus_DEFAULT NULL

#define fk_module_WireMessageQuery_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, type, 1) \
X(a, STATIC, SINGULAR, MESSAGE, queryCapabilities, 2) \
X(a, STATIC, SINGULAR, MESSAGE, querySensorCapabilities, 3) \
X(a, STATIC, SINGULAR, MESSAGE, beginTakeReadings, 4) \
X(a, STATIC, SINGULAR, MESSAGE, queryReadingStatus, 5) \
X(a, STATIC, SINGULAR, MESSAGE, custom, 6) \
X(a, STATIC, SINGULAR, MESSAGE, data, 7) \
X(a, STATIC, SINGULAR, MESSAGE, beginTransmission, 8) \
X(a, STATIC, SINGULAR, MESSAGE, queryTransmissionStatus, 9)
#define fk_module_WireMessageQuery_CALLBACK NULL
#define fk_module_WireMessageQuery_DEFAULT NULL
#define fk_module_WireMessageQuery_queryCapabilities_MSGTYPE fk_module_QueryCapabilities
#define fk_module_WireMessageQuery_querySensorCapabilities_MSGTYPE fk_module_QuerySensorCapabilities
#define fk_module_WireMessageQuery_beginTakeReadings_MSGTYPE fk_module_BeginTakeReadings
#define fk_module_WireMessageQuery_queryReadingStatus_MSGTYPE fk_module_QueryReadingStatus
#define fk_module_WireMessageQuery_custom_MSGTYPE fk_module_Custom
#define fk_module_WireMessageQuery_data_MSGTYPE fk_module_Data
#define fk_module_WireMessageQuery_beginTransmission_MSGTYPE fk_module_BeginTransmission
#define fk_module_WireMessageQuery_queryTransmissionStatus_MSGTYPE fk_module_QueryTransmissionStatus

#define fk_module_Error_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, type, 1) \
X(a, CALLBACK, SINGULAR, STRING, message, 2)
#define fk_module_Error_CALLBACK pb_default_field_callback
#define fk_module_Error_DEFAULT NULL

#define fk_module_WireMessageReply_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, type, 1) \
X(a, STATIC, SINGULAR, MESSAGE, error, 2) \
X(a, STATIC, SINGULAR, MESSAGE, capabilities, 3) \
X(a, STATIC, SINGULAR, MESSAGE, sensorCapabilities, 4) \
X(a, STATIC, SINGULAR, MESSAGE, readingStatus, 5) \
X(a, STATIC, SINGULAR, MESSAGE, sensorReading, 6) \
X(a, STATIC, SINGULAR, MESSAGE, custom, 7) \
X(a, STATIC, SINGULAR, MESSAGE, data, 8) \
X(a, STATIC, SINGULAR, MESSAGE, transmissionStatus, 9) \
X(a, STATIC, SINGULAR, MESSAGE, firmware, 10)
#define fk_module_WireMessageReply_CALLBACK NULL
#define fk_module_WireMessageReply_DEFAULT NULL
#define fk_module_WireMessageReply_error_MSGTYPE fk_module_Error
#define fk_module_WireMessageReply_capabilities_MSGTYPE fk_module_Capabilities
#define fk_module_WireMessageReply_sensorCapabilities_MSGTYPE fk_module_SensorCapabilities
#define fk_module_WireMessageReply_readingStatus_MSGTYPE fk_module_ReadingStatus
#define fk_module_WireMessageReply_sensorReading_MSGTYPE fk_module_SensorReading
#define fk_module_WireMessageReply_custom_MSGTYPE fk_module_Custom
#define fk_module_WireMessageReply_data_MSGTYPE fk_module_DataStatus
#define fk_module_WireMessageReply_transmissionStatus_MSGTYPE fk_module_TransmissionStatus
#define fk_module_WireMessageReply_firmware_MSGTYPE fk_module_FirmwareReply

extern const pb_msgdesc_t fk_module_QueryCapabilities_msg;
extern const pb_msgdesc_t fk_module_QuerySensorCapabilities_msg;
extern const pb_msgdesc_t fk_module_Firmware_msg;
extern const pb_msgdesc_t fk_module_Capabilities_msg;
extern const pb_msgdesc_t fk_module_FirmwareReply_msg;
extern const pb_msgdesc_t fk_module_SensorCapabilities_msg;
extern const pb_msgdesc_t fk_module_BeginTakeReadings_msg;
extern const pb_msgdesc_t fk_module_QueryReadingStatus_msg;
extern const pb_msgdesc_t fk_module_ReadingStatus_msg;
extern const pb_msgdesc_t fk_module_SensorReadings_msg;
extern const pb_msgdesc_t fk_module_SensorReading_msg;
extern const pb_msgdesc_t fk_module_Custom_msg;
extern const pb_msgdesc_t fk_module_Data_msg;
extern const pb_msgdesc_t fk_module_DataStatus_msg;
extern const pb_msgdesc_t fk_module_BeginTransmission_msg;
extern const pb_msgdesc_t fk_module_QueryTransmissionStatus_msg;
extern const pb_msgdesc_t fk_module_TransmissionStatus_msg;
extern const pb_msgdesc_t fk_module_WireMessageQuery_msg;
extern const pb_msgdesc_t fk_module_Error_msg;
extern const pb_msgdesc_t fk_module_WireMessageReply_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define fk_module_QueryCapabilities_fields &fk_module_QueryCapabilities_msg
#define fk_module_QuerySensorCapabilities_fields &fk_module_QuerySensorCapabilities_msg
#define fk_module_Firmware_fields &fk_module_Firmware_msg
#define fk_module_Capabilities_fields &fk_module_Capabilities_msg
#define fk_module_FirmwareReply_fields &fk_module_FirmwareReply_msg
#define fk_module_SensorCapabilities_fields &fk_module_SensorCapabilities_msg
#define fk_module_BeginTakeReadings_fields &fk_module_BeginTakeReadings_msg
#define fk_module_QueryReadingStatus_fields &fk_module_QueryReadingStatus_msg
#define fk_module_ReadingStatus_fields &fk_module_ReadingStatus_msg
#define fk_module_SensorReadings_fields &fk_module_SensorReadings_msg
#define fk_module_SensorReading_fields &fk_module_SensorReading_msg
#define fk_module_Custom_fields &fk_module_Custom_msg
#define fk_module_Data_fields &fk_module_Data_msg
#define fk_module_DataStatus_fields &fk_module_DataStatus_msg
#define fk_module_BeginTransmission_fields &fk_module_BeginTransmission_msg
#define fk_module_QueryTransmissionStatus_fields &fk_module_QueryTransmissionStatus_msg
#define fk_module_TransmissionStatus_fields &fk_module_TransmissionStatus_msg
#define fk_module_WireMessageQuery_fields &fk_module_WireMessageQuery_msg
#define fk_module_Error_fields &fk_module_Error_msg
#define fk_module_WireMessageReply_fields &fk_module_WireMessageReply_msg

/* Maximum encoded size of messages (where known) */
#define fk_module_QueryCapabilities_size         17
#define fk_module_QuerySensorCapabilities_size   11
/* fk_module_Firmware_size depends on runtime parameters */
/* fk_module_Capabilities_size depends on runtime parameters */
/* fk_module_FirmwareReply_size depends on runtime parameters */
/* fk_module_SensorCapabilities_size depends on runtime parameters */
#define fk_module_BeginTakeReadings_size         23
#define fk_module_QueryReadingStatus_size        6
#define fk_module_ReadingStatus_size             14
#define fk_module_SensorReadings_size            0
#define fk_module_SensorReading_size             22
/* fk_module_Custom_size depends on runtime parameters */
/* fk_module_Data_size depends on runtime parameters */
#define fk_module_DataStatus_size                11
#define fk_module_BeginTransmission_size         11
#define fk_module_QueryTransmissionStatus_size   0
#define fk_module_TransmissionStatus_size        2
/* fk_module_WireMessageQuery_size depends on runtime parameters */
/* fk_module_Error_size depends on runtime parameters */
/* fk_module_WireMessageReply_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
